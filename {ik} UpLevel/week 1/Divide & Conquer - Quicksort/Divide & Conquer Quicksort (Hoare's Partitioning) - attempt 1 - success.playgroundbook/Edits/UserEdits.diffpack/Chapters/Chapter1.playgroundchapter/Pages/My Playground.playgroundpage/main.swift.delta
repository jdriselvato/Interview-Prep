<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// Divide &amp; Conquer: Quicksort - Hoare's Partitioning in-place array
/* My understanding of it
 *    - A pointers moves across the array until the left one is bigger than the pivot and then the right pointer moves until the number is smaller than the pivot and the two values switch.
 *    - When the points cross, it means the partition is complete and the pivot number will swap with the last index of the left side partition, which will actually be the right point as they two pointers crossed.
 */

func quickSort(_ array: [Int]) -&gt; [Int] {
    var sortingArray = array
    helper(&amp;sortingArray, 0, sortingArray.count - 1)
    return sortingArray
}

var numRan = 0 // to initially prevent stackoverflows

func helper(_ array: inout [Int], _ start: Int, _ end: Int) {
    if start &gt;= end || numRan &gt;= 500 { return }
    numRan += 1
    
    var smaller = start+1 
    var bigger = end
    
    while smaller &lt;= bigger {
        if array[smaller] &lt; array[start] {
            smaller += 1
        } else if array[bigger] &gt; array[start] {
            bigger -= 1
        } else {
            print("âœ¨ swapAt(\(smaller), \(bigger)) : \(array[smaller]), \(array[bigger])")
            array.swapAt(smaller, bigger)
            smaller += 1
            bigger -= 1
        }
    }
    
    print("ðŸŒŸ swapAt(\(start), \(bigger)) : \(array[start]), \(array[bigger])")
    
    array.swapAt(start, bigger)
    
    let pivotIndex = bigger
    
    helper(&amp;array, start, pivotIndex) // from original start to before pivot
    helper(&amp;array, pivotIndex+1, end) // from after pivot to end original end
}

let shuffled: [Int] = [].shuffled()
print("Original: \(shuffled)")
print("Sorted:  \(quickSort(shuffled))")
</string>
			<key>ModifiedRange</key>
			<string>{0, 1705}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
